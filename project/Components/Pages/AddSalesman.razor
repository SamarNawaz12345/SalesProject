@page "/add-salesman"
@using project.IProductService
@using project.Model
@using Microsoft.AspNetCore.Components.Forms
@inject Salesmanservice Salesmanservice
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h3>Add New Salesman</h3>

@if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}

@if (successMessage != null)
{
    <div class="alert alert-success">@successMessage</div>
}

<EditForm Method="Post" Model="newSalesman" OnValidSubmit="HandleValidSubmit" FormName="Addsalesman">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="salesmanName">Salesman Name</label>
        <InputText id="salesmanName" class="form-control" @bind-Value="newSalesman.SalesmanName" />
        <ValidationMessage For="@(() => newSalesman.SalesmanName)" />
    </div>

    <div class="form-group">
        <label for="phoneNumber">Phone Number</label>
        <InputText id="phoneNumber" class="form-control" @bind-Value="newSalesman.PhoneNumber" />
        <ValidationMessage For="@(() => newSalesman.PhoneNumber)" />
    </div>

    <div class="form-group">
        <label for="email">Email Address</label>
        <InputText id="email" class="form-control" @bind-Value="newSalesman.EmailAddress" />
        <ValidationMessage For="@(() => newSalesman.EmailAddress)" />
    </div>

    <div class="form-group">
        <label for="address">Address</label>
        <InputText id="address" class="form-control" @bind-Value="newSalesman.Address" />
        <ValidationMessage For="@(() => newSalesman.Address)" />
    </div>

    <div class="form-group">
        <label for="emergencyNumber">Emergency Number</label>
        <InputText id="emergencyNumber" class="form-control" @bind-Value="newSalesman.EmergencyNumber" />
        <ValidationMessage For="@(() => newSalesman.EmergencyNumber)" />
    </div>

    <div class="form-group">
        <label for="designation">Designation</label>
        <InputText id="designation" class="form-control" @bind-Value="newSalesman.Designation" />
        <ValidationMessage For="@(() => newSalesman.Designation)" />
    </div>

    <div class="form-group">
        <label for="salary">Salary</label>
        <InputNumber  id="salary" class="form-control" @bind-Value="newSalesman.Salary" />
        <ValidationMessage For="@(() => newSalesman.Salary)" />
    </div>

    <div class="form-group">
        <label for="commission">Commission</label>
        <InputNumber  id="commission" class="form-control" @bind-Value="newSalesman.Commission" />
        <ValidationMessage For="@(() => newSalesman.Commission)" />
    </div>

    <button type="submit" class="btn btn-primary">Add Salesman</button>
</EditForm>

@code {
    private Salesman newSalesman = new Salesman();
    private string errorMessage;
    private string successMessage;

    private async Task HandleValidSubmit()
    {
        try
        {
            await Salesmanservice.AddSalesmanAsync(newSalesman);
            successMessage = "Salesman added successfully!";
            errorMessage = null;
            newSalesman = new Salesman(); // Reset form after submission

            // Redirect to the SalesmanList page after successful addition
            Navigation.NavigateTo("/SalesmanList");
        }
        catch (Exception ex)
        {
            errorMessage = $"Error adding salesman: {ex.Message}";
            successMessage = null;
        }
    }
}

